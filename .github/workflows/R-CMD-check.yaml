# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: install ubuntu dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install dotnet-runtime-8.0 libcurl4-openssl-dev libssl-dev libxml2-dev
          sudo apt-get install libfontconfig1-dev libharfbuzz-dev libfribidi-dev
          sudo apt-get install libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
          sudo ln -s /usr/lib/x86_64-linux-gnu/libdl.so.2 /usr/lib/x86_64-linux-gnu/libdl.so

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
          error-on: '"error"'

      - name: Build package
        if: ${{ success() }}
        run: |
          output_dir <- file.path(normalizePath(Sys.getenv("RUNNER_TEMP"),
                                                winslash = "/"),
                                  "built_package")
          dir.create(output_dir)
          devtools::build(binary = TRUE, path = output_dir)
        shell: Rscript {0}

      - name: Get package version from DESCRIPTION file and set as environment variable
        run: |
          echo "PKG_VERSION=$(grep -oP '(?<=Version: )\d+\.\d+\.\d+\.*\d*' DESCRIPTION)" >> $GITHUB_ENV
          echo $PKG_VERSION
        shell: bash

      - name: Upload built package
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: rSharp-v${{ env.PKG_VERSION }}-${{runner.os}}-r_${{ matrix.config.r }}
          path: ${{ runner.temp }}/built_package/*
